{
    "competitive programming template": {
        "prefix": "competitive",
        "body": [
            "#include <bits/stdc++.h>",
            "using namespace std;",
            "const int M = 1e9 + 7;",
            "#define endl '\\n'",
            "#define int long long",
            "",
            "signed main()",
            "{",
            "    ios::sync_with_stdio(0);",
            "    cin.tie(0);",
            "    cout.tie(0);",
            "    int t = 1;",
            "    cin >> t;",
            "    for (int tt = 0; tt < t; tt++)",
            "    {",
            "        $1",
            "    }",
            "    return 0;",
            "}"
        ],
        "description": "Competitive Programming Template"
    },
	"competitive_2": {
		"prefix": "competitive_2",
		"body": [
			"#include <bits/stdc++.h>",
			"",
			"using namespace std;",
			"",
			"#define frr(i,a,b) for(int i=a;i<=b;i++)",
			"#define test(t) int t; cin >> t; frr(tno,1,t)",
			"#define endl '\\n'",
			"#define int long long",
			"// __builtin_popcountll(x) number of 1s",
			"//__builtin_clzll(x): number of leading 0s (64 bit representation for unsigned long long)",
			"//64-__builtin_clzll(x): number of binary digits",
			"//__builtin_ctzll(x):number of trailing zeroes",
			"//__lg(x) position of msb, 0-indexed",
			"//for square root use sqrtl()",
			"",
			"const int N=1000000007;",
			"const int mod=1000000007;",
			"const int INF=1000000000000000;",
			"const int M=1000005;",
			"",
			"int binPow(int a,int b)",
			"{",
			"    a=a%N;",
			"    if (b == 0)return 1;",
			"    if (b == 1)return a;",
			"    int ret = binPow(a,b/2);",
			"    if (b%2 == 0)return (ret%N * ret%N)%N;",
			"    return ((ret%N * ret%N)%N * a)%N;",
			"}",
			"int inv(int a)",
			"{",
			"    return (binPow(a,N - 2)%N + N)%N;",
			"}",
			"int max(int a,int b,int c)",
			"{",
			"    return max(a,max(b,c));",
			"}",
			"int max(int a,int b,int c,int d)",
			"{",
			"    return max(max(a,b),max(c,d));",
			"}",
			"bool isPrime(int n)",
			"{",
			"    int i;",
			"    for(i = 2;i*i<=n;i++)",
			"    {",
			"        if(n%i == 0)return false;",
			"    }",
			"    return true;",
			"}",
			"int mod_mul(int a, int b) {a = a % N; b = b % N; return (((a * b) %N) + N) % N;}",
			"int mod_add(int a, int b) {a = a % N; b = b % N; return (((a + b) % N) + N) % N;}",
			"int mod_sub(int a,int b){a=a%N;b=b%N;return (a-b+2*N)%N;}",
			"int mod_add(int a, int b,int c,int d) {a = a % N; b = b % N; c=c%N;d=d%N;int x=mod_add(a,b);int y=mod_add(c,d);return mod_add(x,y);}",
			"int mod_add(int a,int b,int c){a=a%N;b=b%N;c=c%N;int x=mod_add(a,b);int y=mod_add(x,c);return y;}",
			"",
			"// vector<int>fact(M+1,1);",
			"// vector<int>ifact(M+1,1);",
			"// int make_factorial()",
			"// {",
			"//         for(int i=2;i<=M;i++)",
			"//         {",
			"//             fact[i]=mod_mul(fact[i-1],i);",
			"//         }",
			"//         ifact[M]=inv(fact[M]);",
			"//         for (int i=M-1;i>=1;i--)",
			"//         {",
			"//             ifact[i]=mod_mul(i+1,ifact[i+1]);",
			"//         }",
			"//         return 0;",
			"// }",
			"// int x=make_factorial();",
			"// int binom(int $n,int $r)",
			"// {",
			"//    if($n<$r || $n<0 || $r<0) return 0;",
			"//    //if($n>Fact_Length) { cout<<\"Error\"<<endl; return; }",
			"//    int $ans=(fact[$n]*(ifact[$r]))%N;",
			"//    $ans=($ans*(ifact[$n-$r]))%N;",
			"//    return $ans;",
			"// }",
			"",
			"// ------------------------------------------------------",
			"// const int P = 200020;",
			"// vector<vector<int>> divisor(P);",
			"// int Sieve(){",
			"//     for(int i=1; i<P; i++){",
			"//         for(int j=i; j<P; j+=i){",
			"//             divisor[j].push_back(i);",
			"//         }",
			"//     }",
			"//     return 0;",
			"// }",
			"// int y = Sieve();",
			"",
			"void inp(vector<int>&a){",
			"    int n=a.size();",
			"    for(int i=0;i<n;i++)cin>>a[i];",
			"}",
			"void inp(vector<vector<int>>&a){",
			"    int n=a.size();",
			"    int m=a[0].size();",
			"    for(int i=0;i<n;i++){",
			"        for(int j=0;j<m;j++)cin>>a[i][j];",
			"    }",
			"}",
			"void print(vector<int>&a){",
			"    for(auto &x:a)cout<<x<<\" \";",
			"    cout<<endl;",
			"}",
			"void print(vector<vector<int>>&a){",
			"    int n=a.size();",
			"    int m=a[0].size();",
			"    for(int i=0;i<n;i++){",
			"        for(int j=0;j<m;j++)cout<<a[i][j]<<\" \";",
			"        cout<<endl;",
			"    }",
			"}",
			"signed main()",
			"{",
			"    ios_base::sync_with_stdio(false);",
			"    cin.tie(NULL); cout.tie(NULL);",
			"    int t = 1;",
			"    cin >> t;",
			"    for (int tt = 0; tt < t; tt++)",
			"    {",
            "        $1",
			"    }",
			"    return 0;",
			"}"
		],
		"description": "Competitive programming template"
	},
	"leetcode": {
		"prefix": "leetcode",
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"const int M = 1e9 + 7;",
			"#define endl '\\n'",
			"#define int long long",
			"",
			"class Solution {",
			"public:",
            "$1",
			"};",
			"",
			"signed main()",
			"{",
			"    ios::sync_with_stdio(0);",
			"    cin.tie(0);",
			"    cout.tie(0);",
			"    Solution sol;",
			"    ",
			"    return 0;",
			"}"
		],
		"description": "C++ template for LeetCode problems"
	}	
}
